/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "common/base_keymap.h"
#include "common/keys.h"
#include "common/mouse.dtsi"
#include "common/behaviors.dtsi"
#include "common/macros.dtsi"
#include "common/tap_dances.dtsi"

#include "common/layouts/5_column_36_keys.h"
#include "common/layouts/5_column_36_keys_combos.dtsi"

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

CUSTOM_LAYER(qwerty, "Qwerty",
  QWERTY_UL         QWERTY_UR
  QWERTY_HL         QWERTY_HR
  QWERTY_LL         QWERTY_LR
  QWERTY_TL         QWERTY_TR
)

CUSTOM_LAYER(numbers, "Numbers",
  NUMBERS_UL        NUMBERS_UR
  NUMBERS_HL        NUMBERS_HR
  NUMBERS_LL        NUMBERS_LR
  NUMBERS_TL        NUMBERS_TR
)

CUSTOM_LAYER(numpad, "Numpad",
  NUMPAD_6_UL       NUMPAD_6_UR
  NUMPAD_6_HL       NUMPAD_6_HR
  NUMPAD_6_LL       NUMPAD_6_LR
  NUMPAD_TL         NUMPAD_TR
)

CUSTOM_LAYER(symbols, "Symbols",
  SYMBOLS_UL        SYMBOLS_UR
  SYMBOLS_HL        SYMBOLS_HR
  SYMBOLS_LL        SYMBOLS_LR
  SYMBOLS_TL        SYMBOLS_TR
)

CUSTOM_LAYER(coding, "Coding",
  CODING_UL         CODING_UR
  CODING_HL         CODING_HR
  CODING_LL         CODING_LR
  CODING_TL         CODING_TR
)

CUSTOM_LAYER(controls, "Controls",
  CONTROLS_UL       CONTROLS_UR
  CONTROLS_HL       CONTROLS_HR
  CONTROLS_LL       CONTROLS_LR
  CONTROLS_TL       CONTROLS_TR
)

CUSTOM_LAYER(switch, "Switch",
  SWITCH_UL         SWITCH_UR
  SWITCH_HL         SWITCH_HR
  SWITCH_LL         SWITCH_LR
  SWITCH_TL         SWITCH_TR
)

CUSTOM_LAYER(mouse, "Mouse",
  MOUSE_UL          MOUSE_UR
  MOUSE_HL          MOUSE_HR
  MOUSE_LL          MOUSE_LR
  MOUSE_TL          MOUSE_TR
)

CUSTOM_LAYER(scroll, "Scroll",
  SCROLL_UL         SCROLL_UR
  SCROLL_HL         SCROLL_HR
  SCROLL_LL         SCROLL_LR
  SCROLL_TL         SCROLL_TR
)

CUSTOM_LAYER(snipe, "Snipe",
  SNIPE_UL          SNIPE_UR
  SNIPE_HL          SNIPE_HR
  SNIPE_LL          SNIPE_LR
  SNIPE_TL          SNIPE_TR
)

CUSTOM_LAYER(funcs, "Funcs",
  FUNCS_UL          FUNCS_UR
  FUNCS_HL          FUNCS_HR
  FUNCS_LL          FUNCS_LR
  FUNCS_TL          FUNCS_TR
)

CUSTOM_LAYER(afk, "AFK",
  AFK_UL            AFK_UR
  AFK_HL            AFK_HR
  AFK_LL            AFK_LR
  AFK_TL            AFK_TR
)
