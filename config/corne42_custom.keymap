/*
#include <behaviors/mouse_keys.dtsi>
*/
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "common/base_keymap.h"
#include "common/keys.h"
#include "common/mouse.dtsi"
#include "common/behaviors.dtsi"
#include "common/sensors.dtsi"
#include "common/macros.dtsi"
#include "common/tap_dances.dtsi"

#include "common/layouts/6_column_42_keys_custom.h"
#include "common/layouts/6_column_42_keys_combos.dtsi"

#define UG(code)                     &rgb_ug code
#define UG_WHITE                     &rgb_ug RGB_COLOR_HSB(0,0,100)

#define SPECIAL_CONTROLS_TL          &trans              UG(RGB_SPD)         UG(RGB_SPI)
#define SPECIAL_CONTROLS_TR          &mkp LCLK           &mkp RCLK           &mkp MCLK

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
  };
};

/*
   -----------------------------------------------------------------------
   |             |                |                   |                  |
   |   ROTARY    |      LHS       |     JOYSTICK      |       RHS        |
   |             |                |                   |                  |
   -----------------------------------------------------------------------
 */

CUSTOM_LAYER2(qwerty, "Qwerty",
                    QWERTY_6_UL       &mmv MOVE_UP        QWERTY_6_UR
                    QWERTY_6_HL       &mmv MOVE_DOWN      QWERTY_6_HR
                    QWERTY_6_LL       &mmv MOVE_LEFT      QWERTY_6_LR
    &kp C_MUTE      QWERTY_TL         &mmv MOVE_RIGHT     QWERTY_TR
                                      &mkp LCLK
  , &encoder_vol
)

CUSTOM_LAYER2(numbers, "Numbers",
                    NUMBERS_6_UL      &mmv MOVE_UP        NUMBERS_6_UR
                    NUMBERS_6_HL      &mmv MOVE_DOWN      NUMBERS_6_HR
                    NUMBERS_6_LL      &mmv MOVE_LEFT      NUMBERS_6_LR
    &none           NUMBERS_TL        &mmv MOVE_RIGHT     NUMBERS_TR
                                      &mkp LCLK
  , &encoder_number
)

CUSTOM_LAYER2(symbols, "Symbols",
                    SYMBOLS_6_UL      &mmv MOVE_UP        SYMBOLS_6_UR
                    SYMBOLS_6_HL      &mmv MOVE_DOWN      SYMBOLS_6_HR
                    SYMBOLS_6_LL      &mmv MOVE_LEFT      SYMBOLS_6_LR
    &none           SYMBOLS_TL        &mmv MOVE_RIGHT     SYMBOLS_TR
                                      &mkp LCLK
  , &encoder_zoom
)

CUSTOM_LAYER2(coding, "Coding",
                    CODING_6_UL       &mmv MOVE_UP        CODING_6_UR
                    CODING_6_HL       &mmv MOVE_DOWN      CODING_6_HR
                    CODING_6_LL       &mmv MOVE_LEFT      CODING_6_LR
    &none           CODING_TL         &mmv MOVE_RIGHT     CODING_TR
                                      &mkp LCLK
  , &encoder_scroll
)

CUSTOM_LAYER2(controls, "Controls",
                    CONTROLS_6_UL     &mmv MOVE_UP        CONTROLS_6_UR
                    CONTROLS_6_HL     &mmv MOVE_DOWN      CONTROLS_6_HR
                    CONTROLS_6_LL     &mmv MOVE_LEFT      CONTROLS_6_LR
    &none   SPECIAL_CONTROLS_TL       &mmv MOVE_RIGHT     SPECIAL_CONTROLS_TR
                                      &mkp LCLK
  , &encoder_scroll
)

CUSTOM_LAYER2(switch, "Switch",
                    SWITCH_6_UL       &mmv MOVE_UP        SWITCH_6_UR
                    SWITCH_6_HL       &mmv MOVE_DOWN      SWITCH_6_HR
                    SWITCH_6_LL       &mmv MOVE_LEFT      SWITCH_6_LR
    &none           SWITCH_TL         &mmv MOVE_RIGHT     SWITCH_TR
                                      &mkp LCLK
  , &encoder_vol
)

CUSTOM_LAYER2(funcs, "Funcs",
                    FUNCS_6_UL        &mmv MOVE_UP        FUNCS_6_UR
                    FUNCS_6_HL        &mmv MOVE_DOWN      FUNCS_6_HR
                    FUNCS_6_LL        &mmv MOVE_LEFT      FUNCS_6_LR
    &none           FUNCS_TL          &mmv MOVE_RIGHT     FUNCS_TR
                                      &mkp LCLK
  , &encoder_screen
)

CUSTOM_LAYER2(afk, "AFK",
                    AFK_6_UL          &none               AFK_6_UR
                    AFK_6_HL          &none               AFK_6_HR
                    AFK_6_LL          &none               AFK_6_LR
    &none           AFK_TL            &none               AFK_TR
                                      &none
  , &encoder_afk
)
